#include <LedControlSS.h>
#define NBR_MTX 10

#define s1cdnm 10                   // SangamOne Connected Display Number of Modules
#define s1cdncol s1cdnm*8           // SangamOne Connected Display Number of Columns
#define s1mxchinmsg 90              // SangamOne Connected Display Max number of characters in a message (accomodate about 90 char string)
/*
int s1cdnm = 10;                    // SangamOne Connected Display Number of Modules
int s1cdncol = s1cdnm*8;            // SangamOne Connected Display Number of Columns
*/

static int number=0;
int pos=0,k=0,Counter=0,passcount=0,msgcount=0,i=0,j=0,n=0,pass=0;
char ch;

LedControl lc=LedControl(12,11,10,NBR_MTX);

// String characters= "ABCDE 12345 A1B2C A2B3C A4B5C A5B6C ";
//char characters[]= "Welcome to ABC we are located at South Bangalore Karnataka INDIA Phone 91 80 23456789";
char characters[] = "Aa";
char characters1[]= "Bb12";
char characters2[]= "CcDd34";
char characters3[]= "EeFfGg56";
char characters4[]= "VWXYZ56789";
char characters5[]= "abcde";
char characters6[]= "fghijk";
char characters7[]= "lmnop";
char characters8[]= "qrstu";
char characters9[]= "NHSBSVNG";
char charactersA[]= "BSVNGUDI";

byte array_src[s1mxchinmsg*6]={0};  // accommodate about 90 char string

byte array_dsply[s1cdncol]={0};     // 80 when 10 modules are cascaded


void setup() {
  
  Serial.begin (9600);
  for (int i=0; i< NBR_MTX; i++){
    lc.shutdown(i,false);
    lc.setIntensity(i,0);
  }
}


void chngstring(int msgcount)
{
       k=0;
   if(msgcount==0){
    for(Counter=0;Counter<=10;Counter++)   //for testing, we are keeping only first 10 characters. Should be made 85 later on. Ideally, the length should be dynamically picked up.
    {
       ch=characters[Counter];
       pos=lc.getCharArrayPosition(ch);
       for(int i=0;i<=5;i++)
       {
          array_src[k]=alphabetBitmap[pos][i];
          k++;
       } 
    }
    }
   if(msgcount==1){
    for(Counter=0;Counter<=10;Counter++)   //for testing, we are keeping only first 10 characters. Should be made 85 later on. Ideally, the length should be dynamically picked up.
    {
       ch=characters1[Counter];
       pos=lc.getCharArrayPosition(ch);
       Serial.println(pos);
       for(int i=0;i<=5;i++)
       {
          array_src[k]=alphabetBitmap[pos][i];
          k++;
       } 
    }
    }
    if(msgcount==2){
    for(Counter=0;Counter<=10;Counter++)   //for testing, we are keeping only first 10 characters. Should be made 85 later on. Ideally, the length should be dynamically picked up.
    {
       ch=characters2[Counter];
       pos=lc.getCharArrayPosition(ch);
       for(int i=0;i<=5;i++)
       {
          array_src[k]=alphabetBitmap[pos][i];
          k++;
       } 
    }
    } 
    if(msgcount==3){
    for(Counter=0;Counter<=10;Counter++)   //for testing, we are keeping only first 10 characters. Should be made 85 later on. Ideally, the length should be dynamically picked up.
    {
       ch=characters3[Counter];
       pos=lc.getCharArrayPosition(ch);
       for(int i=0;i<=5;i++)
       {
          array_src[k]=alphabetBitmap[pos][i];
          k++;
       } 
    }
    }
     
  }
   

void loop()
{
// Code created by RamaRao on April 7th 2014 (Start)
//
// ***** Section Begins below *****
// Code section below tested  by RamaRao on April 12th 2014
//
// All existing lc.setrow pieces of code can be removed by inserting the repeated for loop structure below 
//
/*
int s1cdnm = 10; // SangamOne Connected Display Number of Modules
int s1cdncol = s1cdnm*8; //  SangamOne Connected Display Number of Columns
*/
int s1index_i=0; // can be commented out as it is initialised in the for loop
int s1index_j=0; // can be commented out as it is initialised in the for loop
int s1index_k=0;

    for(s1index_i=0;s1index_i<s1cdnm;s1index_i++)
    {
       for(s1index_j=7;s1index_j>=0;s1index_j--)
       {
        lc.setRow(s1index_i,s1index_j,array_dsply[s1index_k]);
        s1index_k++;
       }
    }

// Code section above tested  by RamaRao on April 12th 2014
// ***** Section Ends above *****

  
     
    Serial.println(msgcount);
    Serial.println(passcount);
    j=passcount;
    i=0;
      if(j<s1cdncol) 
    {
     do

     {
     j--;
     array_dsply[i]=array_src[j];
     i++;
     }while(j>0); // update of array when bytes are less than # of columns
    } 
    else
    {
     do

     {
     j--;
     array_dsply[i]=array_src[j];
     i++;
     }while(i<s1cdncol);  // update of array when bytes that can be displayed is only as much as the # of columns
    } 
      if(passcount==0)
    {
        chngstring(msgcount); 
    }
      
      if(passcount<181)
    {
        passcount++;
    }
      if(passcount>180)
    {
      msgcount++;
      if(msgcount>=4)
      {
    msgcount=0;
      }
      passcount=0;    
    }
    

    delay(10);
  
}

